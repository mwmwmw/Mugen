var MusicGenerator=function(t){var e={};function r(n){if(e[n])return e[n].exports;var u=e[n]={i:n,l:!1,exports:{}};return t[n].call(u.exports,u,u.exports,r),u.l=!0,u.exports}return r.m=t,r.c=e,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var u in t)r.d(n,u,function(e){return t[e]}.bind(null,u));return n},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=0)}([function(t,e,r){"use strict";r.r(e);var n={};r.r(n),r.d(n,"check",function(){return i}),r.d(n,"random_powerlaw",function(){return l}),r.d(n,"countValue",function(){return a}),r.d(n,"sort",function(){return f}),r.d(n,"shuffle",function(){return d});var u={};r.r(u),r.d(u,"CHORD_PATTERNS",function(){return s}),r.d(u,"CHORD_IDENTITIES",function(){return N}),r.d(u,"fromScale",function(){return I}),r.d(u,"chordAtIndex",function(){return S}),r.d(u,"identify",function(){return h}),r.d(u,"matchChord",function(){return M}),r.d(u,"bassNote",function(){return E});var o={};r.r(o),r.d(o,"rotateScale",function(){return p}),r.d(o,"SCALE_SIZE_IN_STEPS",function(){return O}),r.d(o,"SCALE_PATTERNS",function(){return R}),r.d(o,"biggestSemitoneLeap",function(){return g}),r.d(o,"generateSemitonePattern",function(){return T}),r.d(o,"generate",function(){return _}),r.d(o,"sum",function(){return A}),r.d(o,"fitsOctave",function(){return v}),r.d(o,"octaveRemainder",function(){return y}),r.d(o,"extractRawSemitonePattern",function(){return D}),r.d(o,"reconstructScale",function(){return b}),r.d(o,"transposeNotes",function(){return P}),r.d(o,"transpose",function(){return H});var c={};r.r(c),r.d(c,"filterRandomNotes",function(){return C}),r.d(c,"randomNote",function(){return V}),r.d(c,"mutatePattern",function(){return j}),r.d(c,"calculateSequence",function(){return x});const i=t=>Math.random()<t,l=(t,e)=>Math.ceil(Math.exp(Math.random()*(Math.log(e)-Math.log(t)))*t),a=(t,e=!0,r=0)=>t.reduce((t,r)=>r===e?t+1:t,r),f=(t,e)=>t-e,d=t=>{let e=t.slice();for(var r,n,u=e.length;u;)n=Math.floor(Math.random()*u--),r=e[u],e[u]=e[n],e[n]=r;return e},s={PENTA:[0,2],TRIAD:[0,2,4],SUS2:[0,1,4],SUS4:[0,3,4],SEVENTH:[0,2,4,6],NINTH:[0,2,4,6,8],ELEVENTH:[0,2,4,6,8,10]},N={MAJOR:[0,4,7],MAJOR_1ST_INVERSION:[0,5,9],MAJOR_2ND_INVERSION:[0,3,8],MINOR:[0,3,7],MINOR_1ST_INVERSION:[0,4,9],MINOR_2ND_INVERSION:[0,5,8],DIMINISHED:[0,3,6],DIMINISHED_1ST_INVERSION:[0,3,9],DIMINISHED_2ND_INVERSION:[0,6,9],AUGMENTED:[0,4,8]},I=(t,e)=>{let r=[];return t.map((n,u)=>{r.push(S(u,t,e))}),r},S=(t,e,r)=>{let n=[];return r.map(r=>{n.push(e[(t+r)%e.length])}),n},h=t=>{let e=Object.keys(N),r=t.slice().sort(f);return e.filter(t=>{let e=N[t].slice();return M(r,e)})},M=(t,e)=>{let r=t[0];return e.filter((e,n)=>e===t[n]-r).length===e.length},E=(t,e=-24)=>t.sort(f)[0]+e,p=(t,e)=>{let r=t.slice();return r.splice(e,r.length).concat(r.splice(0,e))},m=[2,2,1,2,2,2,1],O={WESTERN:7,PENTATONIC:5,HEXATONIC:6},R={CHROMATIC:[1,1,1,1,1,1,1,1,1,1,1,1],MAJOR:m,DORIAN:p(m,1),PHYGIAN:p(m,2),LYDIAN:p(m,3),MYXOLYDIAN:p(m,4),MINOR:p(m,5),LOCRIAN:p(m,6),PENTA:[2,3,2,2,3]},g=(t=O.WESTERN,e=0,r=12)=>r-e-t+1,T=(t=O.WESTERN,e=12)=>{let r=new Array(t).fill(1);for(;A(r)<e;)r=r.map(t=>i(.5)?t+1:t);for(var n=0;A(r)>e;)r[n=Math.floor(Math.random()*r.length)]>1&&r[n]--;return r},_=(t,e=60,r=24)=>{let n=[];for(let u=0;u<r;u++){n.push(e),e+=t[u%t.length]}return n},A=t=>t.reduce((t,e)=>t+e),v=t=>A(t)%12==0,y=t=>A(t)%12,D=t=>{let e=t.slice().sort(f);return e.map((t,r)=>{if(r+1<e.length)return e[r+1]-t}).filter(t=>void 0!=t)},b=t=>{},P=(t,e)=>{return t.slice().map(t=>H(t,e))},H=(t,e)=>t+e,C=(t,e=.5)=>t.filter(t=>i(e)),V=t=>d(t)[0],j=(t,e)=>{let r=t.slice();return r.map((t,n)=>i(n/r.length)?r[n]:e[Math.floor(Math.random()*e.length)]),r},x=(t,e=16,r=generateMelodyStructure(),n=0)=>{let u=new Array(e).fill(-1),o=-1;return u.map((c,i)=>{let l=i/e,a=Math.random();a>l?o++:a<.33333?o--:o=Math.floor(Math.random()*t.length),o<0&&(o+=t.length),u[i]=r[i%r.length]?t[o%t.length]+n:-1}),u};r.d(e,"chords",function(){return u}),r.d(e,"scale",function(){return o}),r.d(e,"utils",function(){return n}),r.d(e,"melody",function(){return c})}]);
//# sourceMappingURL=main.js.map