var MusicGenerator=function(t){var r={};function n(e){if(r[e])return r[e].exports;var u=r[e]={i:e,l:!1,exports:{}};return t[e].call(u.exports,u,u.exports,n),u.l=!0,u.exports}return n.m=t,n.c=r,n.d=function(t,r,e){n.o(t,r)||Object.defineProperty(t,r,{enumerable:!0,get:e})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,r){if(1&r&&(t=n(t)),8&r)return t;if(4&r&&"object"==typeof t&&t&&t.__esModule)return t;var e=Object.create(null);if(n.r(e),Object.defineProperty(e,"default",{enumerable:!0,value:t}),2&r&&"string"!=typeof t)for(var u in t)n.d(e,u,function(r){return t[r]}.bind(null,u));return e},n.n=function(t){var r=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(r,"a",r),r},n.o=function(t,r){return Object.prototype.hasOwnProperty.call(t,r)},n.p="",n(n.s=0)}([function(t,r,n){"use strict";n.r(r);var e={};n.r(e),n.d(e,"CHORD_PATTERNS",function(){return f}),n.d(e,"CHORD_IDENTITIES",function(){return a}),n.d(e,"SEMITONES_IN_OCTAVE",function(){return l}),n.d(e,"MIDI_MIDDLE_C",function(){return d}),n.d(e,"DEFAULT_SCALE_RANGE",function(){return N}),n.d(e,"MAJOR",function(){return s}),n.d(e,"SCALE_SIZE_IN_STEPS",function(){return I});var u={};n.r(u),n.d(u,"check",function(){return S}),n.d(u,"random_powerlaw",function(){return E}),n.d(u,"countValue",function(){return M}),n.d(u,"sort",function(){return O}),n.d(u,"shuffle",function(){return h});var o={};n.r(o),n.d(o,"fromScale",function(){return p}),n.d(o,"chordAtIndex",function(){return _}),n.d(o,"identify",function(){return R}),n.d(o,"matchChord",function(){return m}),n.d(o,"bassNote",function(){return T});var c={};n.r(c),n.d(c,"rotateScale",function(){return A}),n.d(c,"SCALE_PATTERNS",function(){return g}),n.d(c,"biggestSemitoneLeap",function(){return D}),n.d(c,"generateSemitonePattern",function(){return v}),n.d(c,"refit",function(){return b}),n.d(c,"generate",function(){return y}),n.d(c,"sum",function(){return P}),n.d(c,"fitsOctave",function(){return C}),n.d(c,"octaveRemainder",function(){return H}),n.d(c,"extractRawSemitonePattern",function(){return L}),n.d(c,"reconstructScale",function(){return V}),n.d(c,"transposeNotes",function(){return j}),n.d(c,"transpose",function(){return x});var i={};n.r(i),n.d(i,"filterRandomNotes",function(){return w}),n.d(i,"randomNote",function(){return J}),n.d(i,"mutatePattern",function(){return G});const f={PENTA:[0,2],TRIAD:[0,2,4],SUS2:[0,1,4],SUS4:[0,3,4],SEVENTH:[0,2,4,6],NINTH:[0,2,4,6,8],ELEVENTH:[0,2,4,6,8,10]},a={MAJOR:[0,4,7],MAJOR_1ST_INVERSION:[0,5,9],MAJOR_2ND_INVERSION:[0,3,8],MINOR:[0,3,7],MINOR_1ST_INVERSION:[0,4,9],MINOR_2ND_INVERSION:[0,5,8],DIMINISHED:[0,3,6],DIMINISHED_1ST_INVERSION:[0,3,9],DIMINISHED_2ND_INVERSION:[0,6,9],AUGMENTED:[0,4,8]},l=12,d=60,N=24,s=[2,2,1,2,2,2,1],I={WESTERN:7,PENTATONIC:5,HEXATONIC:6},S=t=>Math.random()<t,E=(t,r)=>Math.ceil(Math.exp(Math.random()*(Math.log(r)-Math.log(t)))*t),M=(t,r=!0,n=0)=>t.reduce((t,n)=>n===r?t+1:t,n),O=(t,r)=>t-r,h=t=>{let r=t.slice();for(var n,e,u=r.length;u;)e=Math.floor(Math.random()*u--),n=r[u],r[u]=r[e],r[e]=n;return r},p=(t,r)=>{let n=[];return t.map((e,u)=>{n.push(_(u,t,r))}),n},_=(t,r,n)=>{let e=[];return n.map(n=>{e.push(r[(t+n)%r.length])}),e},R=t=>{let r=Object.keys(a),n=t.slice().sort(O);return r.filter(t=>{let r=a[t].slice();return m(n,r)})},m=(t,r)=>{let n=t[0];return r.filter((r,e)=>r===t[e]-n).length===r.length},T=(t,r=-24)=>t.sort(O)[0]+r,A=(t,r)=>{let n=t.slice();return n.splice(r,n.length).concat(n.splice(0,r))},g={CHROMATIC:[1,1,1,1,1,1,1,1,1,1,1,1],MAJOR:s,DORIAN:A(s,1),PHYGIAN:A(s,2),LYDIAN:A(s,3),MYXOLYDIAN:A(s,4),MINOR:A(s,5),LOCRIAN:A(s,6),PENTA:[2,3,2,2,3]},D=(t=I.WESTERN,r=0,n=l)=>n-r-t+1,v=(t=I.WESTERN,r=l)=>{let n=new Array(t).fill(1);for(;P(n)<r;)n=n.map(t=>S(.5)?t+1:t);return b(n)},b=(t,r=l)=>{for(var n=0;P(t)!=r;)t[n=Math.floor(Math.random()*t.length)]>1&&(P(t)>r?t[n]--:t[n]++);return t},y=(t,r=d,n=N)=>{let e=[];for(let u=0;u<n;u++){e.push(r),r+=t[u%t.length]}return e},P=t=>t.reduce((t,r)=>t+r),C=t=>P(t)%l==0,H=t=>P(t)%l,L=t=>{let r=t.slice().sort(O);return r.map((t,n)=>{if(n+1<r.length)return r[n+1]-t}).filter(t=>void 0!=t)},V=t=>{},j=(t,r)=>{return t.slice().map(t=>x(t,r))},x=(t,r)=>t+r,w=(t,r=.5)=>t.filter(t=>S(r)),J=t=>h(t)[0],G=(t,r)=>{let n=t.slice();return n.map((t,e)=>S(e/n.length)?n[e]:r[Math.floor(Math.random()*r.length)]),n};n.d(r,"chords",function(){return o}),n.d(r,"scale",function(){return c}),n.d(r,"utils",function(){return u}),n.d(r,"melody",function(){return i}),n.d(r,"c",function(){return e})}]);
//# sourceMappingURL=main.js.map